@model BlogPostViewModel
@using PersonalWebsite.Services;
@{
    ViewData["Title"] = Model.CurrentPost.SeoTitle;
    ViewData["NavItem"] = "Blog";
    ViewData["CssBundle"] = "blogs";

    var seoIndexString = Convert.ToString(Model.CurrentPost.OrderInSeries + 1); // Plus one so we don't include "0th".
    string seoIndexSuffix = "";

    if(Model.CurrentPost.OrderInSeries >= 10 && Model.CurrentPost.OrderInSeries <= 20)
        seoIndexSuffix = "th"; // 11th, 12th, etc.
    else if(seoIndexString.Last() == '1')
        seoIndexSuffix = "st"; // 1st, 21st, etc.
    else if(seoIndexString.Last() == '2')
        seoIndexSuffix = "nd"; // 2nd, 22nd, etc.
    else if(seoIndexString.Last() == '3')
        seoIndexSuffix = "rd"; // 3rd, 23rd, etc.
    else
        seoIndexSuffix = "th"; // 4th, 24th, etc.
    ViewData["SeoDescription"] =
        $"The {seoIndexString}{seoIndexSuffix} blog post of my {Model.Series.Reference} series. " +
        $"Includes: {Model.Series.Tags.Aggregate((a, b) => $"{a} {b}")}";

    int tabCount = (Model.LastPost != null && Model.NextPost != null)
                   ? 3
                   : (Model.LastPost != null || Model.NextPost != null)
                     ? 2
                     : 1;

    string tabClass = null;
    switch(tabCount)
    {
        case 1:
            tabClass = "one";
            break;

        case 2:
            tabClass = "two";
            break;

        case 3:
            tabClass = "three";
            break;

        default: break;
    }

    var seoAccessor = new BlogSeriesAndPosts
    {
        Series = Model.Series,
        Posts  = new[] { Model.LastPost, Model.CurrentPost, Model.NextPost }
    };
    ViewData["SeoCanonical"] = $"BlogPost/{seoAccessor.GetPostSeoPath(1)}";

    string DATE_FORMAT = "dd/MM/yyyy";
}

@section SchemaOrg {
    <meta property="og:url"                     content="https://bradley.chatha.dev/BlogPost/@seoAccessor.GetPostSeoPath(1)"/>
    <meta property="og:title"                   content="@Model.CurrentPost.Title"/>
    <meta property="og:description"             content="@ViewData["SeoDescription"]"/>
    <meta property="og:image"                   content="https://bradley.chatha.dev/favicon.ico"/>
    <meta property="og:type"                    content="article"/>
    <meta property="article:published_time"     content="@Model.CurrentPost.DateCreated.ToString("o")"/>
    <meta property="article:modified_time"      content="@Model.CurrentPost.DateUpdated.ToString("o")"/>
    <meta property="article:author"             content="Bradley Chatha"/>
    <meta property="article:section"            content="Programming"/>
}

<section class="blog wrapper">
    <menu class="blog navigation @tabClass tab">
        @if (Model.LastPost != null)
        {
            <a class="tab" href="/BlogPost/@seoAccessor.GetPostSeoPath(0)">
                <h2>Previous</h2>
                <span title="@Model.LastPost.Title">@Model.LastPost.Title</span>
            </a>
        }
        <a class="active tab" href="/BlogPost/@seoAccessor.GetPostSeoPath(1)">
            <h2>Current</h2>
            <span title="@Model.CurrentPost.Title">@Model.CurrentPost.Title</span>
        </a>
        @if (Model.NextPost != null)
        {
            <a class="tab" href="/BlogPost/@seoAccessor.GetPostSeoPath(2)">
                <h2>Next</h2>
                <span title="@Model.NextPost.Title">@Model.NextPost.Title</span>
            </a>
        }
    </menu>
    <article class="blog">
        <h1>@Model.CurrentPost.Title</h1>
        <div class="centered metadata">
            Created on @Model.CurrentPost.DateCreated.ToString(DATE_FORMAT) | Updated on @Model.CurrentPost.DateUpdated.ToString(DATE_FORMAT)
        </div>
        <div class="centered metadata">
            @{ var shareUrl = Html.Encode($"https://bradley.chatha.dev/BlogPost/{seoAccessor.GetPostSeoPath(1)}"); }
            <a class="social twitter no style"
               href="https://twitter.com/intent/tweet?text=@shareUrl"
               target="_blank">
                <i class="fa fa-twitter"></i>
                Tweet
            </a>
            <a class="social reddit no style"
               href="https://www.reddit.com/submit?url=@shareUrl&title=@Html.Encode(Model.CurrentPost.Title)"
               target="_blank">
                <i class="fa fa-reddit-alien"></i>
                Share
            </a>
            <a class="social linkedin no style"
               href="https://www.linkedin.com/sharing/share-offsite/?url=@shareUrl"
               target="_blank">
                <i class="fa fa-linkedin"></i>
                Share
            </a>
        </div>

        @Html.Raw(Model.CurrentPost.GeneratedHtml)

        <div class="bottom padded metadata`">
            <!--Copy pasted from Blog.cshtml, but meh...-->
            <div class="tags">
                <i class="fa fa-tags"></i>
                @for (int i = 0; i < Model.Series.Tags.Count; i++)
                {
                    var tag = Model.Series.Tags.Skip(i).First();
                    var needsComma = (i != Model.Series.Tags.Count - 1);
                    <small>
                        <a asp-action="Blog" asp-route-tag="@tag">
                            @(tag + (needsComma ? "," : ""))
                        </a>
                    </small>
                }
            </div>
        </div>

        <div class="bottom padded centered metadata">
            <a class="social github no style centered"
               href="@Model.CurrentPost.GithubUrl">
                <i class="fa fa-github"></i>
                Improve this page on Github
            </a>
        </div>
    </article>
</section>
