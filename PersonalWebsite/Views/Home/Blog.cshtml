@model BlogIndexViewModel
@{
    ViewData["Title"] = "Blog";
    ViewData["NavItem"] = "Blog";
    ViewData["SeoDescription"] = Model.Series
                                      .SelectMany(s => s.Series.Tags)
                                      .Concat(Model.Series.Select(s => s.Series.Reference))
                                      .Aggregate((a, b) => $"{a} {b}");

    string DATE_FORMAT = "dd/MM/yyyy";
}

<section class="series">
    @foreach(var series in Model.Series)
    {
        <div class="wrapper">
            <article>
                <h1>@series.Series.Name</h1>
                <small>Created on @series.Posts.First().DateCreated.ToString(DATE_FORMAT)</small>
                <small>Updated on @series.Posts.OrderBy(p => p.DateUpdated).Last().DateUpdated.ToString(DATE_FORMAT)</small>
                <p>@series.Series.Description</p>

                <ol>
                    @foreach (var post in series.Posts)
                    {
                        <li>
                            <a asp-action="BlogPost" asp-route-seriesRef="@series.Series.Reference" asp-route-postIndex="@post.OrderInSeries">
                                @post.Title
                            </a>
                        </li>
                    }
                </ol>
                <div class="tags">
                    <i class="fa fa-tags"></i>
                    @for(int i = 0; i < series.Series.Tags.Count; i++)
                    {
                        var tag = series.Series.Tags.Skip(i).First();
                        var needsComma = (i != series.Series.Tags.Count - 1);
                        <small>
                            <a asp-action="Blog" asp-route-tag="@tag">
                                @(tag + (needsComma ? "," : ""))
                            </a>
                        </small>
                    }
                </div>
            </article>
        </div>
    }
</section>