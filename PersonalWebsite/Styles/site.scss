@import "_common.scss";
@import "_colour_scheme.scss";
@import "_common_util.scss";

body {
    @extend .background.gray.shade.one;
    margin: 0;
    font-size: 16px;
    font-family: 'Roboto', sans-serif, Arial, Helvetica, sans-serif;
    min-height: 100vh;
    display: block;
    position: relative;
    padding-bottom: 90px;
}

.navbar {
    @extend .background.primary.shade.seven;
    $superSmallWidth: 450px;
    $smallWidth: 870px;
    $largeWidth: 1280px;

    margin: 0;
    display: flex;
    width: 100%;
    height: 50px;
    flex-direction: row;
    // On super small screens, enable wrapping, and change the height
    @media only screen and (max-width: $superSmallWidth) {
        flex-flow: wrap;
        height: auto;
    }

    & h1 {
        display: flex;
        align-self: center;
        // Change a few things based on screen size, to keep things looking good.
        font-size: 0.95em;
        width: 100%;

        @media only screen and (min-width: $superSmallWidth) {
            font-size: 1em;
        }

        @media only screen and (min-width: $smallWidth) {
            width: 33.33333%;
        }

        @media only screen and (min-width: $largeWidth) {
            font-size: 1.5em;
        }
    }

    & h1 a {
        @extend .primary.shade.two;
        @extend .left.one.padded;
        // Get rid of <a> styling.
        all: initial;
        font: inherit;
        color: inherit;
        padding-left: 0.5em;
        text-decoration: none;
        //
        display: flex;
        flex-direction: column;
        vertical-align: middle;
        font-size: 1em;
        cursor: pointer;
    }

    & .center.column {
        display: flex;
        flex-direction: column;
        align-self: center;
        // On smaller screens, take up more space so we can align properly.
        width: 100%;

        @media only screen and (min-width: $superSmallWidth) {
            align-self: center;
            width: 66%;
        }

        @media only screen and (min-width: $smallWidth) {
            width: 33.33333%;
        }
    }

    & .center.items {
        display: flex;
        // On smaller screens, align the items to the far right instead of the center
        // Then on SUPER small screens, go back to the center due to the header being too large
        align-self: center;

        @media only screen and (min-width: $superSmallWidth) {
            align-self: flex-end;
        }

        @media only screen and (min-width: $smallWidth) {
            align-self: center;
        }

        & .item {
            @extend .primary.shade.four;
            // Get rid of default <a> styling, and keep some of the stuff we need.
            all: initial;
            font-family: inherit;
            color: inherit;
            text-decoration: none;
            //
            font-size: 1.2em;
            font-weight: 700;
            cursor: pointer;
            // Padding
            padding-bottom: 0.5em;
            padding-left: 0.8em;
            padding-right: 0.8em;
            padding-top: 0.8em;
            // Border stuff (transparent by default)
            border-bottom-width: 3px;
            border-bottom-style: solid;
            border-bottom-color: transparent;
            // To transition back to the original color, after it's changed by the :hover rules
            transition: border-bottom-color 0.2s ease;

            &.active {
                @extend .primary.shade.three;
                font-weight: bolder;
                border-bottom-color: currentColor;
            }

            &:hover {
                @extend .border.bottom.primary.shade.two;
                @extend .primary.shade.two;
                // Create a more specific selector, so we don't need to use !important.
                &.active:hover {
                    @extend .primary.shade.two;
                }

                transition: border-bottom-color 0.2s ease;
            }
        }
    }
}

footer {
    @extend .background.primary.shade.seven;
    display: flex;
    flex-direction: row;
    width: 100%;
    height: 90px;
    position: absolute;
    bottom: 0px;
    // On small screens, disable the padding column, and increase the width of the middle one to compensate
    .three.column.grid {
        .center.aligned.row {
            @media only screen and (max-width: 660px) {
                .padding.column {
                    width: 0%;
                }

                .column:nth-child(2) {
                    width: 66%;
                }
            }
        }
    }

    & .contact.element {
        @extend .gray.shade.two;
        display: flex;
        flex-direction: column;
        padding-top: 0.5em;

        // On small screens, we disable the padding column.
        // So we need to left-align instead of center align, and add a bit of padding.
        @media only screen and (max-width: 660px) {
            padding-left: 1em;
            align-self: start;
        }

        & label {
            @extend .primary.shade.four;
            font-size: 1.3em;
            align-self: center;
            font-weight: bold;
        }

        & div {
            margin-top: 0.4em;
            // The phone icon is a bit thinner than the mail icon,
            // so we need to pad the phone number text a tiny bit.
            & .phone.padded {
                padding-left: 0.32em;
            }
        }
    }

    & .social.media.element {
        display: flex;
        flex-direction: row;
        padding-top: 1.05em;

        & .linkedin {
            @extend .background.primary.shade.nine;
            @extend .gray.shade.two;
            display: flex;
            padding: 0.4em 0.6em 0.4em 0.6em;
            border-radius: 6px;
            text-decoration: none;
            margin-right: 1em;
        }

        & .twitter {
            @extend .background.primary.shade.nine;
            @extend .gray.shade.two;
            display: flex;
            padding: 0.4em 0.6em 0.4em 0.6em;
            border-radius: 6px;
            text-decoration: none;
        }
    }
}

// To make sure the @extended rules take priority.
@import "_colour_scheme.scss";

// Specific styling
@import "_styles_home.scss"; // Home page
@import "_styles_awards.scss"; // Awards page