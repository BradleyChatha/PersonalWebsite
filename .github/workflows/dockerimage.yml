name: Docker Image CI

on:
  push:
    tags:
      - v*

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 3.1.101

      - name: Build with dotnet
        run: dotnet build --configuration Release

      - name: Test with dotnet
        run: dotnet test      
  package:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      
    - name: Set output
      id: vars
      run: echo "::set-output name=short_ref::$(echo $GITHUB_REF | cut -d/ -f3)"
         
    - name: Docker login
      run: docker login -u SealabJaster -p ${{ secrets.GITHUB_TOKEN }} docker.pkg.github.com
      
    - name: Build the Docker image
      run: docker build . --file Dockerfile --tag docker.pkg.github.com/sealabjaster/personalwebsite/deployment:${{ steps.vars.outputs.short_ref }}
      
    - name: Publish the Docker image
      run: docker push docker.pkg.github.com/sealabjaster/personalwebsite/deployment:${{ steps.vars.outputs.short_ref }}
      
    - uses: chrnorm/deployment-action@releases/v1
      if: always()
      name: Create GitHub deployment
      id: deployment
      with:
        token: "${{ github.token }}"
        target-url: https://bradley.chatha.dev/
        environment: production

    - name: Update deployment status (success)
      if: success()
      uses: chrnorm/deployment-status@releases/v1
      with:
        token: "${{ github.token }}"
        target-url: https://bradley.chatha.dev/
        state: "pending"
        deployment_id: ${{ steps.deployment.outputs.deployment_id }}

    - name: Update deployment status (failure)
      if: failure()
      uses: chrnorm/deployment-status@releases/v1
      with:
        token: "${{ github.token }}"
        target-url: https://bradley.chatha.dev/
        state: "failure"
        deployment_id: ${{ steps.deployment.outputs.deployment_id }}
